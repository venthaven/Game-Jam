[gd_scene load_steps=13 format=2]

[ext_resource path="res://player/Player.tscn" type="PackedScene" id=1]
[ext_resource path="res://projectiles/PlayerBullet.tscn" type="PackedScene" id=2]
[ext_resource path="res://level/Level.tscn" type="PackedScene" id=3]
[ext_resource path="res://Player_Container.gd" type="Script" id=4]
[ext_resource path="res://enemy/Enemy.tscn" type="PackedScene" id=5]
[ext_resource path="res://Enemy_Container.gd" type="Script" id=6]
[ext_resource path="res://UI/HUD.tscn" type="PackedScene" id=7]

[sub_resource type="NavigationPolygon" id=1]
vertices = PoolVector2Array( -640, 632, -328, 544, -121, 543, -73, 543, 39, 575, 640, -32, 592, -32, 471, -33, 471, -97, -521, 263, -129, 255, -57, 255, -137, 287, -185, 287, -233, 255, -281, 255, -393, 191, 40, 160, 152, 160, -281, 191, 232, 544, 568, 544, 95, 575, -40, 160, 87, 287, 232, 256, 520, 256, 448, 320, 360, 320, 392, 96, 568, 192, 232, 192, 152, 40, -384, -512, -448, -512, -480, -520, -480, -576, -352, -640, -152, 160, -232, -160, 128, -224, 192, -224, -152, -160, -552, -192, -472, -224, -424, -224, -344, -216, -344, -160, -417, -161, 576, 384, 640, 96, 640, 640, 568, 448, 448, 416, 520, 384, 512, 448, -168, -512, -120, -544, -72, -544, -128, -480, -184, -480, 640, -640, 576, -224, 576, -576, -297, 127, -152, 40, 512, -576, 512, -224, 440, -400, 440, -576, -72, -608, -32, -640, -32, -224, -104, -352, -128, -416, -345, 127, -417, -1, 104, -32, 152, -32, 231, 31, 104, 40, -384, -448, -352, -424, -544, -424, -448, -448, -393, 127, -345, 39, -288, -640, -120, -608, 151, 415, 151, 351, 232, 320, 344, -632, 392, -568, 344, -576, 584, -24, 432, -384, 408, -224, 408, -320, 231, -97, 152, -160, -536, 544, -168, -576, -216, -568, -288, -360, -216, -512, -201, 415, -137, 351, -89, 319, -89, 383, -121, 487, -201, 479, 392, -384, 360, -320, 312, -384, 288, -448, 288, -512, 296, -576, -472, -288, -552, -256, -544, -344, 103, 351, 103, 415, 95, 479, 39, 479, 23, 383, 23, 319, 39, 287, -288, -344, -184, -416, -232, -352, -280, -344, 39, 223, -65, 191, -73, 479, -480, -512, -448, -504, 279, 31, 392, 32, -297, 31, 87, 223, -521, 191, -433, 191, -152, -32, -257, -33, -265, -97, -232, -288, -152, -352, -152, -288, -232, -224, 24, -640, 296, -640, 192, -576, -40, -96, 40, -160, 40, -96, -104, -32, -40, -160, -104, -96, 104, -96, 576, 32, 279, -33, 584, 32, 104, 96, 40, 96, -40, 96, -104, 96, -104, 40, -129, 191, -233, 191, 512, 480, 280, 480, 360, 416, 280, 320, -249, 479, -328, 320, -249, 415, 264, -224, -433, 135, -553, 127, -561, 63, -185, 351, -576, -640, -536, -576, -640, -632, -424, -288, -280, -288, 232, -512, -536, -512, -536, 320, -569, 263, -600, -256, -465, -1, -104, -288, -313, -33, -313, -97, -473, -161, -593, 63, -600, -192, 360, -224, 312, -224, 264, -376, 232, -448, 128, -576, 24, -224, -593, 127, -569, 199 )
polygons = [ PoolIntArray( 0, 1, 2, 3, 4 ), PoolIntArray( 5, 6, 7, 8 ), PoolIntArray( 9, 10, 11, 12, 13 ), PoolIntArray( 14, 10, 9 ), PoolIntArray( 15, 14, 9 ), PoolIntArray( 16, 17, 18, 19 ), PoolIntArray( 20, 21, 22 ), PoolIntArray( 23, 17, 16 ), PoolIntArray( 24, 25, 26, 27, 28 ), PoolIntArray( 29, 30, 31, 18, 32 ), PoolIntArray( 33, 34, 35, 36, 37 ), PoolIntArray( 38, 23, 16 ), PoolIntArray( 39, 40, 41, 42 ), PoolIntArray( 43, 44, 45, 46, 47, 48 ), PoolIntArray( 49, 50, 51, 21, 52 ), PoolIntArray( 53, 54, 49, 52, 55 ), PoolIntArray( 50, 49, 30 ), PoolIntArray( 56, 57, 58, 59, 60 ), PoolIntArray( 61, 5, 62, 63 ), PoolIntArray( 38, 16, 64, 65 ), PoolIntArray( 66, 67, 68, 69 ), PoolIntArray( 58, 70, 71, 72 ), PoolIntArray( 58, 72, 73, 74, 59 ), PoolIntArray( 75, 64, 16 ), PoolIntArray( 76, 77, 78, 79, 32, 80 ), PoolIntArray( 81, 82, 83, 84 ), PoolIntArray( 75, 16, 85, 86 ), PoolIntArray( 87, 71, 70, 88 ), PoolIntArray( 89, 90, 91, 20 ), PoolIntArray( 92, 61, 63, 66 ), PoolIntArray( 92, 66, 69 ), PoolIntArray( 92, 69, 93, 94 ), PoolIntArray( 7, 6, 95 ), PoolIntArray( 96, 68, 67, 97, 98 ), PoolIntArray( 99, 79, 78, 100, 41 ), PoolIntArray( 21, 51, 0, 22 ), PoolIntArray( 4, 22, 0 ), PoolIntArray( 101, 1, 0 ), PoolIntArray( 37, 82, 81, 33 ), PoolIntArray( 29, 50, 30 ), PoolIntArray( 57, 56, 102, 88 ), PoolIntArray( 87, 88, 102, 103 ), PoolIntArray( 104, 87, 103, 105 ), PoolIntArray( 106, 107, 108, 109, 110, 111 ), PoolIntArray( 108, 107, 12, 11 ), PoolIntArray( 94, 93, 112, 113, 114, 115, 116, 117 ), PoolIntArray( 105, 56, 60, 104 ), PoolIntArray( 54, 53, 27, 26 ), PoolIntArray( 118, 44, 43, 119, 120 ), PoolIntArray( 24, 121, 122, 123, 124, 125, 126, 127 ), PoolIntArray( 128, 104, 60, 129, 130, 131 ), PoolIntArray( 89, 20, 22, 123, 122 ), PoolIntArray( 132, 127, 126, 11, 133 ), PoolIntArray( 124, 4, 3, 134, 125 ), PoolIntArray( 135, 35, 34, 136 ), PoolIntArray( 137, 138, 29, 32, 79 ), PoolIntArray( 65, 64, 139 ), PoolIntArray( 31, 25, 24, 140, 18 ), PoolIntArray( 15, 9, 141, 142 ), PoolIntArray( 42, 143, 144, 145, 39 ), PoolIntArray( 146, 147, 148, 149 ), PoolIntArray( 147, 146, 130, 129, 74 ), PoolIntArray( 150, 151, 117, 152 ), PoolIntArray( 153, 154, 155, 156 ), PoolIntArray( 154, 153, 157 ), PoolIntArray( 156, 158, 153 ), PoolIntArray( 155, 159, 77, 156 ), PoolIntArray( 160, 138, 137, 161, 7, 95 ), PoolIntArray( 95, 162, 160 ), PoolIntArray( 80, 163, 164 ), PoolIntArray( 164, 17, 23, 165 ), PoolIntArray( 165, 166, 167, 80 ), PoolIntArray( 168, 10, 14, 169 ), PoolIntArray( 53, 55, 170, 171, 172 ), PoolIntArray( 172, 171, 173, 28 ), PoolIntArray( 24, 28, 173 ), PoolIntArray( 24, 173, 91 ), PoolIntArray( 24, 91, 90, 121 ), PoolIntArray( 11, 126, 108 ), PoolIntArray( 111, 110, 2, 1, 174 ), PoolIntArray( 174, 1, 175, 176 ), PoolIntArray( 5, 8, 41, 177 ), PoolIntArray( 41, 8, 99 ), PoolIntArray( 178, 142, 179, 180 ), PoolIntArray( 9, 13, 181, 175 ), PoolIntArray( 182, 37, 36, 183, 184 ), PoolIntArray( 149, 46, 45, 185, 186 ), PoolIntArray( 117, 116, 187, 152 ), PoolIntArray( 109, 125, 134, 110 ), PoolIntArray( 181, 107, 106, 176 ), PoolIntArray( 135, 136, 84, 83, 188 ), PoolIntArray( 181, 176, 175 ), PoolIntArray( 9, 175, 189, 190 ), PoolIntArray( 67, 62, 5 ), PoolIntArray( 67, 5, 97 ), PoolIntArray( 112, 96, 98, 113 ), PoolIntArray( 184, 183, 188, 83, 191 ), PoolIntArray( 41, 100, 154 ), PoolIntArray( 76, 86, 85, 178, 180, 192 ), PoolIntArray( 189, 101, 0, 190 ), PoolIntArray( 72, 193, 73 ), PoolIntArray( 74, 73, 147 ), PoolIntArray( 128, 131, 186 ), PoolIntArray( 120, 128, 186, 185 ), PoolIntArray( 156, 77, 76 ), PoolIntArray( 143, 156, 76 ), PoolIntArray( 144, 143, 76, 194 ), PoolIntArray( 194, 76, 48, 195 ), PoolIntArray( 18, 140, 132, 133 ), PoolIntArray( 148, 193, 72, 39, 149 ), PoolIntArray( 80, 164, 165 ), PoolIntArray( 76, 80, 167 ), PoolIntArray( 76, 167, 65, 139 ), PoolIntArray( 76, 139, 86 ), PoolIntArray( 43, 196, 192, 180, 197, 198 ), PoolIntArray( 199, 97, 5 ), PoolIntArray( 199, 5, 200 ), PoolIntArray( 113, 199, 200, 114 ), PoolIntArray( 115, 114, 201, 202 ), PoolIntArray( 145, 195, 48, 47 ), PoolIntArray( 177, 200, 5 ), PoolIntArray( 201, 177, 41, 202 ), PoolIntArray( 202, 41, 152, 187 ), PoolIntArray( 150, 152, 203 ), PoolIntArray( 204, 150, 203, 40 ), PoolIntArray( 204, 40, 39 ), PoolIntArray( 72, 204, 39 ), PoolIntArray( 186, 146, 149 ), PoolIntArray( 120, 185, 118 ), PoolIntArray( 120, 119, 191, 83 ), PoolIntArray( 0, 184, 191, 198 ), PoolIntArray( 205, 179, 142, 141 ), PoolIntArray( 41, 154, 157 ), PoolIntArray( 41, 157, 42 ), PoolIntArray( 47, 39, 145 ), PoolIntArray( 43, 48, 196 ), PoolIntArray( 0, 198, 197, 205 ), PoolIntArray( 190, 0, 205, 206 ), PoolIntArray( 141, 206, 205 ), PoolIntArray( 15, 142, 16 ), PoolIntArray( 19, 15, 16 ), PoolIntArray( 169, 19, 18 ), PoolIntArray( 168, 169, 18 ), PoolIntArray( 168, 18, 133 ) ]
outlines = [ PoolVector2Array( -640, -632, -640, 632, 640, 640, 640, 96, 392, 96, 392, 32, 576, 32, 584, 32, 584, -24, 592, -32, 640, -32, 640, -640, 344, -632, 344, -576, 296, -576, 296, -640, 24, -640, 24, -224, -32, -224, -32, -640, -288, -640, -288, -360, -288, -344, -544, -344, -544, -424, -352, -424, -352, -640, -576, -640 ), PoolVector2Array( -448, -504, -448, -448, -384, -448, -384, -512, -448, -512 ), PoolVector2Array( -480, -520, -480, -576, -536, -576, -536, -512, -480, -512 ), PoolVector2Array( -40, -96, -40, -160, -152, -160, -152, -32, -104, -32, -104, -96 ), PoolVector2Array( -216, -568, -216, -512, -168, -512, -168, -576 ), PoolVector2Array( -120, -608, -120, -544, -72, -544, -72, -608 ), PoolVector2Array( -280, -344, -280, -288, -232, -288, -232, -352 ), PoolVector2Array( -152, -352, -152, -288, -104, -288, -104, -352 ), PoolVector2Array( -184, -416, -128, -416, -128, -480, -184, -480 ), PoolVector2Array( 40, -160, 40, -96, 104, -96, 104, -32, 152, -32, 152, -160 ), PoolVector2Array( 128, -576, 192, -576, 192, -224, 128, -224 ), PoolVector2Array( 512, -576, 512, -224, 576, -224, 576, -576 ), PoolVector2Array( 392, -568, 392, -384, 432, -384, 440, -400, 440, -576 ), PoolVector2Array( 232, -512, 232, -448, 288, -448, 288, -512 ), PoolVector2Array( 264, -376, 264, -224, 312, -224, 312, -384 ), PoolVector2Array( 360, -320, 360, -224, 408, -224, 408, -320 ), PoolVector2Array( -344, -216, -344, -160, -232, -160, -232, -224 ), PoolVector2Array( -472, -288, -472, -224, -424, -224, -424, -288 ), PoolVector2Array( -552, -256, -552, -192, -600, -192, -600, -256 ), PoolVector2Array( 360, 320, 360, 416, 448, 416, 448, 320 ), PoolVector2Array( 232, 192, 232, 256, 520, 256, 520, 384, 576, 384, 568, 192 ), PoolVector2Array( 232, 320, 232, 544, 568, 544, 568, 448, 512, 448, 512, 480, 280, 480, 280, 320 ), PoolVector2Array( -536, 320, -536, 544, -328, 544, -328, 320 ), PoolVector2Array( -152, 40, -152, 160, -40, 160, -40, 96, -104, 96, -104, 40 ), PoolVector2Array( 40, 96, 40, 160, 152, 160, 152, 40, 104, 40, 104, 96 ), PoolVector2Array( 231, -97, 231, 31, 279, 31, 279, -33, 471, -33, 471, -97 ), PoolVector2Array( -473, -161, -465, -1, -417, -1, -417, -161 ), PoolVector2Array( -313, -97, -313, -33, -257, -33, -265, -97 ), PoolVector2Array( -345, 39, -345, 127, -297, 127, -297, 31 ), PoolVector2Array( -593, 63, -593, 127, -553, 127, -561, 63 ), PoolVector2Array( -433, 135, -433, 191, -393, 191, -393, 127 ), PoolVector2Array( -569, 199, -569, 263, -521, 263, -521, 191 ), PoolVector2Array( -281, 191, -281, 255, -233, 255, -233, 191 ), PoolVector2Array( -129, 191, -129, 255, -57, 255, -65, 191 ), PoolVector2Array( -89, 319, -89, 383, 23, 383, 23, 319 ), PoolVector2Array( -185, 287, -185, 351, -137, 351, -137, 287 ), PoolVector2Array( -249, 415, -249, 479, -201, 479, -201, 415 ), PoolVector2Array( -121, 487, -121, 543, -73, 543, -73, 479 ), PoolVector2Array( 39, 479, 39, 575, 95, 575, 95, 479 ), PoolVector2Array( 103, 351, 103, 415, 151, 415, 151, 351 ), PoolVector2Array( 39, 223, 39, 287, 87, 287, 87, 223 ) ]

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;

uniform float vignette_intensity = 0.4;
uniform float vignette_opacity : hint_range(0.0, 6.0) = 3.0;
uniform vec4 vignette_rgb : hint_color = vec4(0.0, 0.0, 0.0, 1.0);

float vignette(vec2 uv){
	uv *= 1.0 - uv.xy;
	float vignette = uv.x * uv.y * 15.0;
	return pow(vignette, vignette_intensity * vignette_opacity);
}

void fragment(){
	vec4 color = texture(SCREEN_TEXTURE, SCREEN_UV);
	vec4 text = texture(TEXTURE, UV);
	
	text.rgba *= (vignette_rgb.rgba);
	text.rgba *= (1.0 - vignette(UV));
	
	COLOR = vec4((text.rgb)*color.rgb,text.a);
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/vignette_intensity = 0.4
shader_param/vignette_opacity = 3.0
shader_param/vignette_rgb = Color( 0, 0, 0, 1 )

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;

// Amount of detail.
uniform int octaves = 4;

// Opacity of the output fog.
uniform float starting_amplitude: hint_range(0.0, 0.5) = 0.5;

// Rate of pattern within the fog.
uniform float starting_frequency = 1.0;

// Shift towards transparency (clamped) for sparser fog.
uniform float shift: hint_range(-1.0, 0.0) = -0.2;

// Direction and speed of travel.
uniform vec2 velocity = vec2(1.0, 1.0);

// Color of the fog.
uniform vec4 fog_color: hint_color = vec4(0.5, 0, 0, 0.2);

// Noise texture; OpenSimplexNoise is great, but any filtered texture is fine.
uniform sampler2D noise;

float rand(vec2 uv) {
	float amplitude = starting_amplitude;
	float frequency = starting_frequency;
	float output = 0.0;
	for (int i = 0; i < octaves; i++) {
		output += texture(noise, uv * frequency).x * amplitude;
		amplitude /= 2.0;
		frequency *= 2.0;
	}
	return clamp(output + shift, 0.0, 1.0);
}

void fragment() {
	vec2 motion = vec2(rand(UV + TIME * starting_frequency * velocity));
	COLOR = mix(vec4(0.0), fog_color, rand(UV + motion));
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/octaves = 4
shader_param/starting_amplitude = 0.5
shader_param/starting_frequency = 1.0
shader_param/shift = -0.2
shader_param/velocity = Vector2( 1, 1 )
shader_param/fog_color = Color( 0.5, 0, 0, 0.2 )

[node name="Game" type="Node2D"]

[node name="Level" parent="." instance=ExtResource( 3 )]

[node name="Bullet_Container" type="Node2D" parent="."]

[node name="PlayerBullet" parent="Bullet_Container" instance=ExtResource( 2 )]
position = Vector2( 1000, 0 )

[node name="Player_Container" type="Node2D" parent="."]
script = ExtResource( 4 )

[node name="Player" parent="Player_Container" instance=ExtResource( 1 )]
position = Vector2( 403, 314 )

[node name="Enemy_Container" type="Node2D" parent="."]
script = ExtResource( 6 )

[node name="Spawn_Timer" type="Timer" parent="Enemy_Container"]
wait_time = 5.0
autostart = true

[node name="Enemy" parent="Enemy_Container" instance=ExtResource( 5 )]

[node name="Navigation2D" type="Navigation2D" parent="."]
visible = false

[node name="NavigationPolygonInstance" type="NavigationPolygonInstance" parent="Navigation2D"]
position = Vector2( 1, 1 )
navpoly = SubResource( 1 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="ColorRect2" type="ColorRect" parent="CanvasLayer"]
material = SubResource( 5 )
anchor_right = 1.0
anchor_bottom = 1.0

[node name="ColorRect" type="ColorRect" parent="CanvasLayer"]
material = SubResource( 3 )
margin_left = -1305.0
margin_top = -1273.0
margin_right = 1308.0
margin_bottom = 1272.0

[node name="HUD" parent="CanvasLayer" instance=ExtResource( 7 )]

[connection signal="timeout" from="Enemy_Container/Spawn_Timer" to="Enemy_Container" method="_on_Spawn_Timer_timeout"]
